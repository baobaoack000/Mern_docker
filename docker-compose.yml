version: "3.4"
services:
  frontend:
    container_name: frontend
    build:
      context: frontend
      dockerfile: ./Dockerfile
    restart: always
    ports:
      - 3000:3000
    stdin_open: true
    depends_on:
      - backend
    volumes:
      - ./frontend:/usr/src/app
    networks:
      - react-express
      - hadolint
  backend:
    container_name: express-mongoose-es6-rest-api
    build:
      context: ./backend
    volumes:
      # Mounts the project directory on the host to /app inside the container,
      # allowing you to modify the code without having to rebuild the image.
      - ./backend:/app
      # Just specify a path and let the Engine create a volume.
      # Data present in the base image at the specified mount point will be copied
      # over to the new volume upon volume initialization.
      # node_modules from this new volume will be used and not from your local dev env.
      - /app/node_modules/

    # Expose ports [HOST:CONTAINER}
    ports:
      - "4040:4040"

    # Set environment variables from this file
    env_file:
      - ./backend/.env

    # Overwrite any env var defined in .env file (if required)
    environment:
      - MONGO_HOST=mongodb://mongo/express-mongoose-es6-rest-api-development
      - DEBUG=express-mongoose-es6-rest-api:*

    # Link to containers in another service.
    # Links also express dependency between services in the same way as depends_on,
    # so they determine the order of service startup.
    links:
      - mongo
  mongo:
    container_name: mongo1
    restart: always
    image: mongo:5.0
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    volumes:
      - ./data:/data/db
    networks:
      express-mongo:
        ipv4_address: 172.16.0.2
    expose:
      - 27017
  appsmith:
    image: index.docker.io/appsmith/appsmith-ce
    container_name: appsmith
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./stacks:/appsmith-stacks
    restart: unless-stopped
    networks:
      express-mongo:
  hadolint:
    container_name: hadolint
    image: hadolint/hadolint:v1.17.5
    working_dir: /usr/src/app/
    command:
      [
        "hadolint",
        "--config",
        "./backend/hadolint.yaml",
        "./backend/Dockerfile",
      ]
    volumes:
      - ./:/usr/src/app/
    networks:
      - hadolint
    expose:
      - 9000

networks:
  react-express:
  express-mongo:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.0.0/24
  hadolint:
